ring r = 0, (x0, x1, x2, x3, x4, x5, a, b, c), dp;

int i;
int k;

matrix m2[1][21] = 0;
matrix m3[1][56] = 0;

ideal I = (x0, x1, x2, x3, x4, x5);
ideal J2 = I^2;
ideal J3 = I^3;

for (i = 1; i <= 21; i = i + 1){
(m2[1, i]) = J2[i];
};

for (i = 1; i <= 56; i = i + 1){
m3[1, i]=J3[i];
};

matrix d0m[1][56] = diff(m3, x0);
matrix d0[56][21];
matrix tmp[2][1];
for (i = 1; i <= 56; i = i+1){
tmp = coef(d0m[1, i], x0*x1*x2*x3*x4*x5);
for (k = 1; k <= 21; k = k+1){
if(tmp[1, 1] == m2[1, k]){
d0[i, k] = tmp[2, 1];
};
};
};

matrix d1m[1][56]=diff(m3, x1);
matrix d1[56][21];
matrix tmp[2][1];
for (i = 1; i <= 56; i = i + 1){
tmp = coef(d1m[1, i], x0*x1*x2*x3*x4*x5);
for (k = 1; k <= 21; k = k+1){
if(tmp[1, 1] == m2[1, k]){
d1[i, k] = tmp[2, 1];
};
};
};

matrix d2m[1][56] = diff(m3, x2);
matrix d2[56][21];
matrix tmp[2][1];
for (i = 1; i <= 56; i = i + 1){
tmp = coef(d2m[1, i], x0*x1*x2*x3*x4*x5);
for (k = 1; k <= 21; k = k+1){
if(tmp[1, 1] == m2[1, k]){
d2[i, k] = tmp[2, 1];
};
};
};

matrix d3m[1][56] = diff(m3, x3);
matrix d3[56][21];
matrix tmp[2][1];
for (i = 1; i <= 56; i = i+1){
tmp = coef(d3m[1, i], x0*x1*x2*x3*x4*x5);
for (k = 1; k <= 21; k = k + 1){
if(tmp[1, 1] == m2[1, k]){
d3[i, k] = tmp[2, 1];
};
};
};

matrix d4m[1][56] = diff(m3, x4);
matrix d4[56][21];
matrix tmp[2][1];
for (i = 1; i <= 56; i = i+1){
tmp = coef(d4m[1, i], x0*x1*x2*x3*x4*x5);
for (k = 1; k <= 21; k = k + 1){
if(tmp[1, 1] == m2[1, k]){
d4[i, k] = tmp[2, 1];
};
};
};

matrix d5m[1][56]=diff(m3,x5);
matrix d5[56][21];
matrix tmp[2][1];
for (i = 1; i <= 56; i = i + 1){
tmp = coef(d5m[1, i], x0*x1*x2*x3*x4*x5);
for (k = 1; k <= 21; k = k + 1){
if(tmp[1, 1] == m2[1, k]){
d5[i, k] = tmp[2, 1];
};
};
};

matrix row[21][12];
matrix rowq[1][12];
matrix tmp2[2][4];
matrix tmp3[2][2];

rowq[1, 1] = a*x0^2 + a*x3^2 - x2*x4 - x1*x5;

rowq[1, 2] = a*x1^2 + a*x4^2 - x3*x5 - x2*x0;

rowq[1, 3] = a*x2^2 + a*x5^2 - x4*x0 - x3*x1;

rowq[1, 4] = b*x0^2 - b*x3^2 - x2*x4 + x1*x5;

rowq[1, 5] = b*x1^2 - b*x4^2 - x3*x5 + x2*x0;

rowq[1, 6] = b*x2^2 - b*x5^2 - x4*x0 + x3*x1;

rowq[1, 7] = c*x0*x1 - x2*x5;

rowq[1, 8] = c*x1*x2 - x3*x0;

rowq[1, 9] = c*x2*x3 - x4*x1;

rowq[1, 10] = x0*x1 - x3*x4;

rowq[1, 11] = x1*x2 - x4*x5;

rowq[1, 12] = x2*x3 - x5*x0;

for (i = 1; i <= 6; i = i+1){
tmp2 = coef(rowq[1, i], x0*x1*x2*x3*x4*x5);
for (k = 1; k <= 21; k = k + 1){
if(tmp2[1, 1] == m2[1, k]){row[k, i] = tmp2[2, 1];
};
if(tmp2[1, 2] == m2[1, k]){row[k, i] = tmp2[2, 2];
};
if(tmp2[1, 3] == m2[1, k]){row[k, i] = tmp2[2, 3];
};
if(tmp2[1, 4] == m2[1, k]){row[k, i] = tmp2[2, 4];
};
};
};

for (i = 7; i <= 12; i = i + 1){
tmp3 = coef(rowq[1, i], x0*x1*x2*x3*x4*x5);
for (k = 1; k <= 21; k = k + 1){
if(tmp3[1, 1] == m2[1, k]){row[k, i] = tmp3[2, 1];
};
if(tmp3[1, 2] == m2[1, k]){row[k, i] = tmp3[2, 2];
};
};
};

matrix row0[56][12] = d0*row;
matrix row1[56][12] = d1*row;
matrix row2[56][12] = d2*row;
matrix row3[56][12] = d3*row;
matrix row4[56][12] = d4*row;
matrix row5[56][12] = d5*row;
matrix all[56][72];

for (i = 1; i <= 12; i = i + 1){
for (k = 1; k <= 56; k = k + 1){
all[k, i] = row0[k, i];
all[k, i+12] = row1[k, i];
all[k, i+24] = row2[k, i];
all[k, i+36] = row3[k, i];
all[k, i+48] = row4[k, i];
all[k, i+60] = row5[k, i];
};
};

matrix el[2][72];

int wsp;
int kol;
int t;
poly tmpf;
poly tmpg;

for (i = 1; i <= 6; i = i + 1){
el[1, i] = i + 6;
el[1, i+6] = i + 18;
el[1, i+12] = i + 30;
el[1, i+18] = i + 42;
el[1, i+24] = i + 54;
el[1, i+30] = i + 66;
el[1, i+36] = i;
el[1, i+42] = i + 12;
el[1, i+48] = i + 24;
el[1, i+54] = i + 36;
el[1, i+60] = i + 48;
el[1, i+66] = i + 60;
};

for (i = 1; i <= 72; i = i + 1){
wsp = 0;
kol = int(el[1, i]);
for (k = 1; k <= 56; k = k + 1){
if(all[k, kol] != 0){
wsp = k;
};
};
el[2, i] = wsp;
if(wsp != 0){
tmpg = all[wsp, kol];
for (k = 1; k <= 72; k = k + 1){
if (k != kol){
tmpf = all[wsp, k];
if (tmpf != 0){
for (t = 1; t <= 56; t = t + 1){
all[t, k] = tmpg*(all[t, k]) - tmpf*(all[t, kol]);
};
};
};
};
};
};

LIB "control.lib";

matrix R = rightKernel(transpose(all));

poly s1 = 0;
poly s2 = 0;

for (i = 1; i <= 56; i++){
s1 = s1 + m3[1,i]*R[i,1];
s2 = s2 + m3[1,i]*R[i,2];
};

print(s1);
print(s2);

matrix l0 = transpose(d0)*R; 
matrix l1 = transpose(d1)*R; 
matrix l2 = transpose(d2)*R; 
matrix l3 = transpose(d3)*R; 
matrix l4 = transpose(d4)*R; 
matrix l5 = transpose(d5)*R; 

matrix t0 = transpose(row)*l0;
matrix t1 = transpose(row)*l1;
matrix t2 = transpose(row)*l2;
matrix t3 = transpose(row)*l3;
matrix t4 = transpose(row)*l4;
matrix t5 = transpose(row)*l5;

print(t0);
print(t1);
print(t2);
print(t3);
print(t4);
print(t5);
